{"version":3,"sources":["utils/API.jsx","components/Employees.jsx","components/SearchEmployee.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Employees","props","class","scope","name","phone","email","dob","SearchEmployee","state","search","results","API","then","res","setState","data","console","log","catch","err","style","margin","display","justifyContent","height","width","borderRadius","borderColor","type","id","placeholder","this","map","employee","first","last","date","Component","App","backgroundColor","borderBottom","className","color","textAlign","fontFamily","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAIe,EACC,WACZ,OAAOA,IAAMC,IAJL,0CCuBGC,MAzBf,SAAmBC,GACf,OACI,wBAAOC,MAAM,QAAb,UACI,gCACI,+BAEA,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCACI,+BAEA,6BAAKF,EAAMG,OACX,6BAAKH,EAAMI,QACX,6BAAKJ,EAAMK,QACX,6BAAKL,EAAMM,eCqCZC,E,4MAlDXC,MAAQ,CAEJC,OAAQ,GACRC,QAAS,I,kEAES,IAAD,OACjBC,IACCC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZJ,QAASG,EAAIE,KAAKL,UAEpBM,QAAQC,IAAIJ,MAEbK,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,Q,+BAM5B,OACI,qCACI,qBAAKC,MAAO,CAAEC,OAAQ,GAAIC,QAAS,OAAQC,eAAgB,UAA3D,SACA,uBACIH,MAAO,CACPI,OAAQ,GACRC,MAAO,IACPC,aAAc,EACdC,YAAa,WAEbC,KAAK,SACLC,GAAG,SACHC,YAAY,aAGhB,8BACKC,KAAKvB,MAAME,QAAQsB,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAEA9B,KAAM8B,EAAS9B,KAAK+B,MAAQD,EAAS9B,KAAKgC,KAC1C/B,MAAO6B,EAAS7B,MAChBC,MAAO4B,EAAS5B,MAChBC,IAAK2B,EAAS3B,IAAI8B,mB,GA1CbC,aCqCdC,MAvCf,SAAatC,GACX,OACE,qCACE,yBACEoB,MAAO,CACLmB,gBAAiB,eACjBf,OAAQ,IACRgB,aAAc,iBAEhBC,UAAU,SANZ,UAQE,oBACErB,MAAO,CACLsB,MAAO,QACPC,UAAW,SACXC,WAAY,aAJhB,gCASA,mBACExB,MAAO,CACLsB,MAAO,QACPC,UAAW,SACXC,WAAY,aAJhB,2DAYF,8BACW,cAAC,EAAD,UCvBFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44d70d1c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://randomuser.me/api/?results=20\";\n\nexport default {\n  getEmployees: function() {\n    return axios.get(URL);\n  }\n};","function Employees(props) {\n    return (\n        <table class=\"table\">\n            <thead>\n                <tr>\n\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Phone</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">DOB</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n\n                <td>{props.name}</td>\n                <td>{props.phone}</td>\n                <td>{props.email}</td>\n                <td>{props.dob}</td>\n                </tr>\n            </tbody>\n        </table>\n    )}\n\n\nexport default Employees;","import React, { Component } from 'react';\nimport API from \"../utils/API\";\nimport Employees from \"./Employees\";\n\nclass SearchEmployee extends Component {\n    state = {\n        // employees: [],\n        search: \"\",\n        results: [],\n    }\n    componentDidMount () {\n        API.getEmployees()\n        .then((res) => {\n          this.setState({\n            results: res.data.results,\n          });\n          console.log(res);\n        })\n        .catch((err) => console.log(err));\n    };\n\n    // handleInputChange = () => {};\n\n    render() {\n        return (\n            <> \n                <div style={{ margin: 20, display: \"flex\", justifyContent: \"center\" }}>\n                <input\n                    style={{\n                    height: 45,\n                    width: 200,\n                    borderRadius: 5,\n                    borderColor: \"#E8E7EB\",\n                    }}\n                    type=\"search\"\n                    id=\"search\"\n                    placeholder=\"Search\"\n                ></input>\n                </div>\n                <div>\n                    {this.state.results.map((employee) => (\n                        <Employees\n                        // image={employee.picture.thumbnail}\n                        name={employee.name.first + employee.name.last}\n                        phone={employee.phone}\n                        email={employee.email}\n                        dob={employee.dob.date}\n                        />\n                    ))}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default SearchEmployee;","import SearchEmployee from \"./components/SearchEmployee\";\n\nfunction App(props) {\n  return (\n    <>\n      <header\n        style={{\n          backgroundColor: \"rgb(0,24,65)\",\n          height: 130,\n          borderBottom: \"5px solid red\",\n        }}\n        className=\"header\"\n      >\n        <h1\n          style={{\n            color: \"white\",\n            textAlign: \"center\",\n            fontFamily: \"Reem Kufi\",\n          }}\n        >\n          Employee Directory\n        </h1>\n        <p\n          style={{\n            color: \"white\",\n            textAlign: \"center\",\n            fontFamily: \"Reem Kufi\",\n          }}\n        >\n          Use the search box to narrow\n          your results.\n        </p>\n      </header>\n\n      <div>\n                 <SearchEmployee />\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}